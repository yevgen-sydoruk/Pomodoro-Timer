{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevgen\\\\Desktop\\\\pomodoro\\\\src\\\\utils\\\\PomodoroComponents\\\\SessionShowcase.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../../utils/duration\";\n\nfunction SessionShowcase({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, session && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 29\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" \", \"remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": `${(1 - session.timeRemaining / (((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusDuration : breakDuration) * 60)) * 100}` // TODO: Increase aria-valuenow as elapsed time increases DONE\n    ,\n    style: {\n      width: `${(1 - session.timeRemaining / (((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusDuration : breakDuration) * 60)) * 100}%`\n    } // TODO: Increase width % as elapsed time increases DONE\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }))))));\n}\n\nexport default SessionShowcase;","map":{"version":3,"sources":["C:/Users/Yevgen/Desktop/pomodoro/src/utils/PomodoroComponents/SessionShowcase.js"],"names":["React","minutesToDuration","secondsToDuration","SessionShowcase","session","focusDuration","breakDuration","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,sBAArD;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAzB,EAAoE;AAChE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKF,OAAO,iBACJ,uDACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OADL,aACKA,OADL,uBACKA,OAAO,CAAEG,KADd,UACyB,GADzB,EAEK,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,KAAT,MAAmB,UAAnB,GACKN,iBAAiB,CAACI,aAAD,CADtB,GAEKJ,iBAAiB,CAACK,aAAD,CAJ3B,EAI4C,GAJ5C,YAFJ,eAUI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEI,aAAV,CADtB,EACgD,GADhD,cAVJ,CADJ,CADJ,eAkBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,qBAAc,GAHlB;AAII,qBAAc,KAJlB;AAKI,qBAAgB,GACZ,CAAC,IACGL,OAAO,CAACI,aAAR,IACK,CAAC,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,KAAT,MAAmB,UAAnB,GACIF,aADJ,GAEIC,aAFL,IAGG,EAJR,CADJ,IAMA,GACH,EAbL,CAaQ;AAbR;AAcI,IAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAAG,GACJ,CAAC,IACGN,OAAO,CAACI,aAAR,IACK,CAAC,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,KAAT,MACF,UADE,GAEIF,aAFJ,GAGIC,aAHL,IAIG,EALR,CADJ,IAOA,GACH;AAVE,KAdX,CAyBO;AAzBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ,CAlBJ,CAJR,CADJ;AA+DH;;AAED,eAAeH,eAAf","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../../utils/duration\";\r\n\r\nfunction SessionShowcase({ session, focusDuration, breakDuration }) {\r\n    return (\r\n        <div>\r\n            {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused DONE*/}\r\n\r\n            {session && (\r\n                <>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col\">\r\n                            {/* TODO: Update message below to include current session (Focusing or On Break) total duration DONE*/}\r\n                            <h2 data-testid=\"session-title\">\r\n                                {session?.label} for{\" \"}\r\n                                {session?.label === \"Focusing\"\r\n                                    ? minutesToDuration(focusDuration)\r\n                                    : minutesToDuration(breakDuration)}{\" \"}\r\n                                minutes\r\n                            </h2>\r\n                            {/* TODO: Update message below correctly format the time remaining in the current session  DONE*/}\r\n                            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                                {secondsToDuration(session?.timeRemaining)}{\" \"}\r\n                                remaining\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col\">\r\n                            <div\r\n                                className=\"progress\"\r\n                                style={{ height: \"20px\" }}\r\n                            >\r\n                                <div\r\n                                    className=\"progress-bar\"\r\n                                    role=\"progressbar\"\r\n                                    aria-valuemin=\"0\"\r\n                                    aria-valuemax=\"100\"\r\n                                    aria-valuenow={`${\r\n                                        (1 -\r\n                                            session.timeRemaining /\r\n                                                ((session?.label === \"Focusing\"\r\n                                                    ? focusDuration\r\n                                                    : breakDuration) *\r\n                                                    60)) *\r\n                                        100\r\n                                    }`} // TODO: Increase aria-valuenow as elapsed time increases DONE\r\n                                    style={{\r\n                                        width: `${\r\n                                            (1 -\r\n                                                session.timeRemaining /\r\n                                                    ((session?.label ===\r\n                                                    \"Focusing\"\r\n                                                        ? focusDuration\r\n                                                        : breakDuration) *\r\n                                                        60)) *\r\n                                            100\r\n                                        }%`,\r\n                                    }} // TODO: Increase width % as elapsed time increases DONE\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SessionShowcase;\r\n"]},"metadata":{},"sourceType":"module"}