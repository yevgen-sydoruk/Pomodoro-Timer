{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yevgen\\\\Desktop\\\\pomodoro\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    disabled: session,\n    onClick: () => setFocusDuration(focusDuration => focusDuration > 5 ? focusDuration - 5 : focusDuration),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    disabled: session,\n    onClick: () => setFocusDuration(focusDuration => focusDuration < 60 ? focusDuration + 5 : focusDuration),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Break Duration:\", \" \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    disabled: session,\n    onClick: () => setBreakDuration(breakDuration => breakDuration > 1 ? breakDuration - 1 : breakDuration),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    disabled: session,\n    onClick: () => setBreakDuration(breakDuration => breakDuration < 15 ? breakDuration + 1 : breakDuration),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: () => setSession(!session),\n    disabled: !session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, session && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" \", \"remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 37\n    }\n  })))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/Yevgen/Desktop/pomodoro/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","Audio","play","playPause","nextState","prevStateSession","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n    const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n    return {\n        ...prevState,\n        timeRemaining,\n    };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n    /**\n     * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n     */\n    return (currentSession) => {\n        if (currentSession.label === \"Focusing\") {\n            return {\n                label: \"On Break\",\n                timeRemaining: breakDuration * 60,\n            };\n        }\n        return {\n            label: \"Focusing\",\n            timeRemaining: focusDuration * 60,\n        };\n    };\n}\n\nfunction Pomodoro() {\n    // Timer starts out paused\n    const [isTimerRunning, setIsTimerRunning] = useState(false);\n    // The current session - null where there is no session running\n    const [session, setSession] = useState(null);\n\n    // ToDo: Allow the user to adjust the focus and break duration.\n    const [focusDuration, setFocusDuration] = useState(25);\n    const [breakDuration, setBreakDuration] = useState(5);\n\n    /**\n     * Custom hook that invokes the callback function every second\n     *\n     * NOTE: You will not need to make changes to the callback function\n     */\n    useInterval(\n        () => {\n            if (session.timeRemaining === 0) {\n                new Audio(\n                    \"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\"\n                ).play();\n                return setSession(nextSession(focusDuration, breakDuration));\n            }\n            return setSession(nextTick);\n        },\n        isTimerRunning ? 1000 : null\n    );\n\n    /**\n     * Called whenever the play/pause button is clicked.\n     */\n    function playPause() {\n        setIsTimerRunning((prevState) => {\n            const nextState = !prevState;\n            if (nextState) {\n                setSession((prevStateSession) => {\n                    // If the timer is starting and the previous session is null,\n                    // start a focusing session.\n                    if (prevStateSession === null) {\n                        return {\n                            label: \"Focusing\",\n                            timeRemaining: focusDuration * 60,\n                        };\n                    }\n                    return prevStateSession;\n                });\n            }\n            return nextState;\n        });\n    }\n\n    return (\n        <div className=\"pomodoro\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"input-group input-group-lg mb-2\">\n                        <span\n                            className=\"input-group-text\"\n                            data-testid=\"duration-focus\"\n                        >\n                            {/* TODO: Update this text to display the current focus session duration DONE*/}\n                            Focus Duration: {minutesToDuration(focusDuration)}\n                        </span>\n                        <div className=\"input-group-append\">\n                            {/* TODO: Implement decreasing focus duration and disable during a focus or break session DONE*/}\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                data-testid=\"decrease-focus\"\n                                disabled={session}\n                                onClick={() =>\n                                    setFocusDuration((focusDuration) =>\n                                        focusDuration > 5\n                                            ? focusDuration - 5\n                                            : focusDuration\n                                    )\n                                }\n                            >\n                                <span className=\"oi oi-minus\" />\n                            </button>\n                            {/* TODO: Implement increasing focus duration  and disable during a focus or break session DONE*/}\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary\"\n                                data-testid=\"increase-focus\"\n                                disabled={session}\n                                onClick={() =>\n                                    setFocusDuration((focusDuration) =>\n                                        focusDuration < 60\n                                            ? focusDuration + 5\n                                            : focusDuration\n                                    )\n                                }\n                            >\n                                <span className=\"oi oi-plus\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col\">\n                    <div className=\"float-right\">\n                        <div className=\"input-group input-group-lg mb-2\">\n                            <span\n                                className=\"input-group-text\"\n                                data-testid=\"duration-break\"\n                            >\n                                {/* TODO: Update this text to display the current break session duration DONE*/}\n                                Break Duration:{\" \"}\n                                {minutesToDuration(breakDuration)}\n                            </span>\n                            <div className=\"input-group-append\">\n                                {/* TODO: Implement decreasing break duration and disable during a focus or break session DONE*/}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    data-testid=\"decrease-break\"\n                                    disabled={session}\n                                    onClick={() =>\n                                        setBreakDuration((breakDuration) =>\n                                            breakDuration > 1\n                                                ? breakDuration - 1\n                                                : breakDuration\n                                        )\n                                    }\n                                >\n                                    <span className=\"oi oi-minus\" />\n                                </button>\n                                {/* TODO: Implement increasing break duration and disable during a focus or break session DONE*/}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    data-testid=\"increase-break\"\n                                    disabled={session}\n                                    onClick={() =>\n                                        setBreakDuration((breakDuration) =>\n                                            breakDuration < 15\n                                                ? breakDuration + 1\n                                                : breakDuration\n                                        )\n                                    }\n                                >\n                                    <span className=\"oi oi-plus\" />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div\n                        className=\"btn-group btn-group-lg mb-2\"\n                        role=\"group\"\n                        aria-label=\"Timer controls\"\n                    >\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            data-testid=\"play-pause\"\n                            title=\"Start or pause timer\"\n                            onClick={playPause}\n                        >\n                            <span\n                                className={classNames({\n                                    oi: true,\n                                    \"oi-media-play\": !isTimerRunning,\n                                    \"oi-media-pause\": isTimerRunning,\n                                })}\n                            />\n                        </button>\n                        {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session*/}\n                        {/* TODO: Disable the stop button when there is no active session DONE*/}\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            data-testid=\"stop\"\n                            title=\"Stop the session\"\n                            onClick={() => setSession(!session)}\n                            disabled={!session}\n                        >\n                            <span className=\"oi oi-media-stop\" />\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div>\n                {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused DONE*/}\n\n                {session && (\n                    <>\n                        <div className=\"row mb-2\">\n                            <div className=\"col\">\n                                {/* TODO: Update message below to include current session (Focusing or On Break) total duration DONE*/}\n                                <h2 data-testid=\"session-title\">\n                                    {session?.label} for{\" \"}\n                                    {session?.label === \"Focusing\"\n                                        ? minutesToDuration(focusDuration)\n                                        : minutesToDuration(breakDuration)}{\" \"}\n                                    minutes\n                                </h2>\n                                {/* TODO: Update message below correctly format the time remaining in the current session  DONE*/}\n                                <p\n                                    className=\"lead\"\n                                    data-testid=\"session-sub-title\"\n                                >\n                                    {secondsToDuration(session?.timeRemaining)}{\" \"}\n                                    remaining\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"row mb-2\">\n                            <div className=\"col\">\n                                <div\n                                    className=\"progress\"\n                                    style={{ height: \"20px\" }}\n                                >\n                                    <div\n                                        className=\"progress-bar\"\n                                        role=\"progressbar\"\n                                        aria-valuemin=\"0\"\n                                        aria-valuemax=\"100\"\n                                        aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                                        style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}